{"version":3,"file":"static/js/565.d34dda08.chunk.js","mappings":"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","sources":["components/Layouts/MyFollowing.js","components/Profile.js","components/Account.js","components/Layouts/Followers.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { followAndUnfollowUser, loadUser } from '../../Actions/User';\r\nimport { MdOutlineVerified } from \"react-icons/md\";\r\nimport Loader from \"../Loader\"\r\n\r\n\r\nexport default function MyFollowing({ element }) {\r\n   const dispatch = useDispatch()\r\n   const { user: me,loading } = useSelector((state) => state.user);\r\n\r\n   const [following, setFollowing] = useState(false);\r\n\r\n   const followHandler = async () => {\r\n      await dispatch(followAndUnfollowUser(element._id));\r\n      setFollowing(!following);\r\n      dispatch(loadUser())\r\n   };\r\n\r\n   // console.log(element);\r\n\r\n   useEffect(() => {\r\n      element && element.followers.map((item) => {\r\n         if (item === me._id) {\r\n            setFollowing(!following)\r\n         }\r\n      });\r\n   }, [me._id, element, dispatch]);\r\n\r\n\r\n   return (\r\n      <>\r\n         {\r\n            loading ? <Loader message={\"Updating\"} /> :\r\n               <div className=\"flex items-center  hover:scale-105 transition duration-700 ease-in-out\">\r\n                  <div className='w-[100%] flex justify-between items-center text-xs md:text-sm md:space-x-5'>\r\n                     <Link to={`/user/${element._id}`}  >\r\n                        <div className='flex items-center  my-3'>\r\n                           <img className='h-[40px] w-[40px] rounded-full ' src={element.avatar.url} alt=\"\" />\r\n                           <h2 className='mx-3 font-medium text-sm hover:text-gray-400 ease-in-out duration-150 lg:text-base flex items-center'> {element.name.slice(0, 10)}{`${element.name.length > 10 ? \"...\" : \"\"}`} {element.role === \"verify\" ? <MdOutlineVerified className='text-blue-600 mx-1' /> : null} </h2>\r\n                        </div>\r\n                     </Link>\r\n                     <div className=''>\r\n                        {element && element._id === me._id ? null : (\r\n                           <button className={\"\" + (following ? 'text-black font-medium px-5 py-2 bg-gray-200 rounded-md' : \"text-white font-medium px-5 py-2 bg-blue-500 rounded-md\")}\r\n                              onClick={followHandler} >\r\n                              {following ? \"Following\" : \"Follow\"}\r\n                           </button>\r\n                        )}\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n         }\r\n      </>\r\n   )\r\n}\r\n","import { Dialog } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { MdOutlineVerified } from 'react-icons/md';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport Followers from './Layouts/Followers';\r\nimport MyFollowing from './Layouts/MyFollowing.js';\r\nimport Loader from './Loader';\r\nimport numeral from \"numeral\"\r\n\r\n\r\nexport default function Profile() {\r\n\r\n   const dispatch = useDispatch()\r\n\r\n   const [followersToggle, setFollowersToggle] = useState(false);\r\n\r\n   const [followingToggle, setFollowingToggle] = useState(false);\r\n\r\n   const { user, loading, error } = useSelector((state) => state.user);\r\n\r\n   useEffect(() => {\r\n      if (error) {\r\n         toast.error(error, {\r\n            position: \"top-center\",\r\n            autoClose: 2000,\r\n            theme: \"colored\",\r\n         });\r\n         dispatch({ type: \"clearErrors\" });\r\n      }\r\n   }, [dispatch, error])\r\n\r\n   // const deleteProfileHandler = async () => {\r\n   //    await dispatch(deleteMyProfile());\r\n   //    dispatch(logoutUser());\r\n   // };\r\n\r\n   return (\r\n      <>\r\n         <div className='px-2'>\r\n            {user &&\r\n               <div className=''>\r\n                  <div className='w-[100%] mx-auto my-5 '>\r\n                     <div className='flex flex-col md:flex-row md:space-x-10 items-center justify-center space-y-3'>\r\n                        <div className='flex flex-col items-center justify-center '>\r\n                           <img className='h-[100px] w-[100px] rounded-full' src={user.avatar.url} alt=\"\" />\r\n                           <h2 className='flex items-center font-medium'>\r\n                              {user.name}\r\n                              {user.role === \"verify\" ? <MdOutlineVerified className='text-blue-600 mx-1 text-' /> : null}\r\n                           </h2>\r\n                        </div>\r\n                        <div className='flex space-x-4 items-center text-sm '>\r\n                           <a href=\"#allPosts\">\r\n                              <button className='flex flex-col justify-center items-center'> <span className='font-medium'>{numeral(user.posts.length).format(\"0.a\")}</span> Post</button>\r\n                           </a>\r\n\r\n                           <button className='flex flex-col justify-center items-center' onClick={() => setFollowersToggle(!followersToggle)}> <span className='font-medium '>{numeral(user.followers.length).format(\"0.a\")}</span> Followers</button>\r\n                           <button className='flex flex-col justify-center items-center' onClick={() => setFollowingToggle(!followingToggle)}> <span className='font-medium '>{numeral(user.following.length).format(\"0.a\")}</span> Following</button>\r\n                        </div>\r\n                     </div>\r\n                  </div>\r\n\r\n                  <Dialog open={followersToggle} onClose={() => setFollowersToggle(!followersToggle)}>\r\n                     <div className=\"w-[100%]  p-3\">\r\n                        <p className='text-xl text-center underline'>Followers</p>\r\n\r\n                        {user.followers.length > 0 ? (\r\n                           user.followers.map((element) => (\r\n                              <Followers element={element} key={element._id} />\r\n                           ))\r\n                        ) : (\r\n                           <p className='text-center p-3'>\r\n                              User have no followers\r\n                           </p>\r\n                        )}\r\n                     </div>\r\n                  </Dialog>\r\n\r\n\r\n                  <Dialog open={followingToggle} onClose={() => setFollowingToggle(!followingToggle)}>\r\n                     <div className=\" p-3 w-[100%] md:w-[100%] md:flex md:flex-col md:items-center md:justify-center\">\r\n                        <p className='text-xl text-center underline'>Following</p>\r\n\r\n                        {user.following.length > 0 ? (\r\n                           user.following.map((element) => (\r\n                              <MyFollowing element={element} key={element._id} />\r\n                           ))\r\n                        ) : (\r\n                           <p className='text-center p-3'>\r\n                              User doesn't follow anyone ..!\r\n                           </p>\r\n                        )}\r\n                     </div>\r\n                  </Dialog>\r\n\r\n                  <div className='flex items-center justify-around md:justify-center md:space-x-10'>\r\n                     <Link to=\"/update/profile\">\r\n                        <button className='p-1 px-3 bg-gray-200 hover:bg-gray-300 transition duration-150 ease-in-out rounded-md font-medium'>Edit profile</button>\r\n                     </Link>\r\n                     <Link to=\"/update/password\">\r\n                        <button className='p-1 px-3 bg-gray-200 hover:bg-gray-300 transition duration-150 ease-in-out rounded-md font-medium'>Change Password</button>\r\n                     </Link>\r\n                  </div>\r\n\r\n                  <div className='bg-gray-300 w-[100%] m-auto h-[1px] my-5'></div>\r\n\r\n               </div>\r\n            }\r\n         </div>\r\n      </>\r\n   )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { getMyPosts } from '../Actions/User';\r\nimport Loader from './Loader';\r\nimport Post from './Post';\r\nimport Profile from './Profile.js';\r\n\r\nexport default function Account() {\r\n\r\n   const dispatch = useDispatch();\r\n\r\n   const { loading: myPostsLoading, error: myPostsError, posts } = useSelector((state) => state.myPosts);\r\n\r\n   useEffect(() => {\r\n      window.scrollTo(0, 0)\r\n      dispatch(getMyPosts());\r\n   }, [dispatch]);\r\n\r\n   useEffect(() => {\r\n      if (myPostsError) {\r\n         toast.error(myPostsError, {\r\n            position: \"top-center\",\r\n            autoClose: 2000,\r\n            theme: \"colored\",\r\n         });\r\n         dispatch({ type: \"clearErrors\" });\r\n      }\r\n   }, [myPostsError, dispatch]);\r\n\r\n   return (\r\n      <>\r\n         <div className='flex flex-col mb-10'>\r\n            <Profile />\r\n            <div id='allPosts' className='md:w-[100%]  md:flex md:items-center md:justify-center  lg:mx-auto'>\r\n               <div className='md:w-[50%]'>\r\n                  {\r\n                     posts && posts.map((post) => (\r\n                        <Post key={post._id} data={post} isAccount={true} isDelete={true} />\r\n                     ))\r\n                  }\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </>\r\n   )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { MdOutlineVerified } from 'react-icons/md';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport { followAndUnfollowUser, getAllUsers, loadUser } from '../../Actions/User';\r\nimport Loader from '../Loader';\r\n\r\nexport default function Followers({ element }) {\r\n\r\n   const dispatch = useDispatch()\r\n   const { user: me, loading } = useSelector((state) => state.user);\r\n   const { users } = useSelector((state) => state.allUsers);\r\n\r\n   const [following, setFollowing] = useState(false);\r\n\r\n   const followHandler = async () => {\r\n      await dispatch(followAndUnfollowUser(element._id));\r\n      setFollowing(!following);\r\n      dispatch(loadUser())\r\n   };\r\n\r\n   useEffect(() => {\r\n      element.followers && element.followers.map((item) => {\r\n         if (item === me._id) {\r\n            setFollowing(true);\r\n         }\r\n      });\r\n   }, [me._id, element, dispatch]);\r\n\r\n\r\n   return (\r\n      <>\r\n         {\r\n            loading ? <Loader message=\"Updating\" /> :\r\n               <div className=\"flex items-center  hover:scale-105 transition duration-700 ease-in-out\">\r\n                  <div className='w-[100%] flex items-center justify-between text-xs md:text-sm md:space-x-5'>\r\n                     <Link to={`/user/${element._id}`}  >\r\n                        <div className='flex items-center  my-3'>\r\n                           <img className='h-[40px] w-[40px] rounded-full ' src={element.avatar.url} alt=\"\" />\r\n                           <h2 className='mx-3 font-medium text-sm hover:text-gray-400 ease-in-out duration-150 lg:text-base flex items-center'> {element.name.slice(0, 10)}{`${element.name.length > 10 ? \"...\" : \"\"}`} {element.role === \"verify\" ? <MdOutlineVerified className='text-blue-600 mx-1' /> : null} </h2>\r\n                        </div>\r\n                     </Link>\r\n                     <div className='md:w-[]'>\r\n                        {element && element._id === me._id ? null : (\r\n                           <button\r\n                              className={\"\" + (following ? 'text-black font-medium px-5 py-2 bg-gray-200 rounded-md' : \"text-white font-medium px-5 py-2 bg-blue-500 rounded-md\")}\r\n                              onClick={followHandler} >\r\n                              {following ? \"Following\" : \"Follow\"}\r\n                           </button>\r\n                        )}\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n         }\r\n      </>\r\n   )\r\n}\r\n"],"names":["MyFollowing","_ref","element","dispatch","useDispatch","_useSelector","useSelector","state","user","me","loading","_useState","useState","_useState2","_slicedToArray","following","setFollowing","followHandler","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","followAndUnfollowUser","_id","loadUser","stop","apply","arguments","useEffect","followers","map","item","_jsx","_Fragment","children","Loader","message","className","_jsxs","Link","to","concat","src","avatar","url","alt","name","slice","length","role","MdOutlineVerified","onClick","Profile","followersToggle","setFollowersToggle","_useState3","_useState4","followingToggle","setFollowingToggle","error","toast","position","autoClose","theme","type","href","numeral","posts","format","Dialog","open","onClose","Followers","Account","myPosts","myPostsError","window","scrollTo","getMyPosts","id","post","Post","data","isAccount","isDelete","allUsers","users"],"sourceRoot":""}