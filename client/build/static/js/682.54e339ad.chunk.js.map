{"version":3,"file":"static/js/682.54e339ad.chunk.js","mappings":"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","sources":["components/Signup.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { registerUser } from '../Actions/User';\r\nimport Loader from './Loader';\r\nimport profile from \"../Asset/Profile.png\"\r\nimport { toast } from 'react-toastify';\r\nimport { BiHide } from \"react-icons/bi\"\r\n\r\nexport default function Signup() {\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [avatar, setAvatar] = useState(profile);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [showPassword, setShowPassword] = useState(\"password\");\r\n\r\n\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const { loading, error, isAuthenticated, message } = useSelector((state) => state.user);\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n\r\n    const Reader = new FileReader();\r\n    Reader.readAsDataURL(file);\r\n\r\n    Reader.onload = () => {\r\n      if (Reader.readyState === 2) {\r\n        setAvatar(Reader.result);\r\n      }\r\n    };\r\n  };\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    await dispatch(registerUser(name, email, password, avatar));\r\n  };\r\n\r\n\r\n  const handleShowPassword = (e) => {\r\n    setShowPassword(showPassword === \"password\" ? \"text\" : \"password\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      toast.error(error, {\r\n        position: \"top-center\",\r\n        autoClose: 2000,\r\n        theme: \"colored\",\r\n      });\r\n      dispatch({ type: \"clearErrors\" });\r\n    }\r\n    if (isAuthenticated) {\r\n      navigate(\"/\")\r\n    }\r\n\r\n  }, [dispatch, error, isAuthenticated]);\r\n\r\n  return (\r\n    <>\r\n      {\r\n        loading ? <Loader message={\"This might take a few seconds\"} /> :\r\n          <div className='bg-gray-300 md:bg-gray-100 h-[auto] flex items-center justify-center md:w-[40vw] mx-auto'>\r\n            <div className='h-[auto] w-[100%] m-auto py-5 rounded-md'>\r\n              <h1 className='headingFont text-center text-3xl py-5 '>InstaLife</h1>\r\n\r\n              <form onSubmit={submitHandler} className='flex flex-col justify-center items-center mt-10'>\r\n\r\n                <div className='text-left w-[100%] px-5 text-sm text-gray-500 font-semibold'>Name</div>\r\n                <input required minLength={4} value={name} onChange={(e) => { setName(e.target.value) }} type=\"text\" placeholder='name' className='w-[90%] py-2 border border-gray outline-none px-2' />\r\n\r\n                <div className='text-left w-[100%] px-5 mt-2 text-sm text-gray-500 font-semibold'>Email</div>\r\n                <input required value={email} onChange={(e) => { setEmail(e.target.value) }} type=\"email\" placeholder='name@example.com' className='w-[90%] py-2 border border-gray outline-none px-2' />\r\n\r\n                <div className='text-left w-[100%] px-5 mt-2 text-sm text-gray-500 font-semibold'>Password</div>\r\n                <input required minLength={8} maxLength={20} value={password} onChange={(e) => { setPassword(e.target.value) }} type={showPassword} placeholder='Password' className='w-[90%] py-2 border border-gray outline-none  px-2' />\r\n                <div className='text-xs text-left w-[100%] px-5 text-gray-500  mt-2 font-medium'>Your password must be 8-20 characters long, contain letters and numbers.</div>\r\n                <div className=\"flex  justify-end w-full px-5 \">\r\n                  <BiHide onClick={handleShowPassword} className='text-2xl text-gray-500 relative bottom-[4.5rem] xl:bottom-[3.5rem] xl:right-5' />\r\n                </div>\r\n\r\n                {/* <img  src={avatar} alt=\"profilepic\" /> */}\r\n                {avatar && <img className='h-[100px] w-[100px] rounded-full border-2 border-black my-5' src={avatar} alt=\"post\" />}\r\n\r\n                <input className='w-[90%]' type=\"file\" accept='image/*' onChange={handleImageChange} />\r\n\r\n                <div className='text-xs my-5 w-[90%] leading-loose'>\r\n                  <p className='font-medium'>While uploading your profile picture, please ensure:</p>\r\n                  <li className='text-gray-800'>Your image should be in JPEG/JPG/PNG format.</li>\r\n                  <li className='text-gray-800'>Picture resolution should be between 200x200 pixels 4000x4000 pixels.</li>\r\n                </div>\r\n\r\n                <button disabled={loading} type='submit' className=' flex justify-center items-center bg-purple-800 w-[90%] py-3 my-5  text-white font-semibold'>Sign up</button>\r\n                <div className='underline'> <Link to=\"/login\">Already a user ? Login</Link></div>\r\n              </form>\r\n\r\n            </div>\r\n          </div>\r\n      }\r\n    </>\r\n  )\r\n}\r\n"],"names":["Signup","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","profile","_useState6","avatar","setAvatar","_useState7","_useState8","password","setPassword","_useState9","_useState10","showPassword","setShowPassword","dispatch","useDispatch","navigate","useNavigate","_useSelector","useSelector","state","user","loading","error","isAuthenticated","submitHandler","message","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","wrap","_context","prev","next","preventDefault","registerUser","stop","_x","apply","arguments","useEffect","toast","position","autoClose","theme","type","_jsx","_Fragment","children","Loader","className","_jsxs","onSubmit","required","minLength","value","onChange","target","placeholder","maxLength","BiHide","onClick","src","alt","accept","file","files","Reader","FileReader","readAsDataURL","onload","readyState","result","disabled","Link","to"],"sourceRoot":""}